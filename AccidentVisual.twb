<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.1011.0410                               -->
<workbook original-version='18.1' source-build='2023.1.7 (20231.23.1011.0410)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
        <calculation class='tableau' formula='2021' />
        <aliases>
          <alias key='2021' value='2021' />
          <alias key='2022' value='2022' />
        </aliases>
        <members>
          <member alias='2021' value='2021' />
          <member alias='2022' value='2022' />
        </members>
      </column>
      <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
        <calculation class='tableau' formula='2022' />
        <aliases>
          <alias key='2021' value='2021' />
          <alias key='2022' value='2022' />
        </aliases>
        <members>
          <member alias='2021' value='2021' />
          <member alias='2022' value='2022' />
        </members>
      </column>
      <column caption='BAC Test' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;0&quot;'>
        <calculation class='tableau' formula='&quot;0&quot;' />
        <members>
          <member value='&quot;0&quot;' />
          <member value='&quot;0.1&quot;' />
          <member value='&quot;0.2&quot;' />
          <member value='&quot;0.3&quot;' />
          <member value='&quot;0.01&quot;' />
          <member value='&quot;0.03&quot;' />
          <member value='&quot;0.05&quot;' />
          <member value='&quot;0.06&quot;' />
          <member value='&quot;0.07&quot;' />
          <member value='&quot;0.08&quot;' />
          <member value='&quot;0.09&quot;' />
          <member value='&quot;0.11&quot;' />
          <member value='&quot;0.12&quot;' />
          <member value='&quot;0.13&quot;' />
          <member value='&quot;0.14&quot;' />
          <member value='&quot;0.15&quot;' />
          <member value='&quot;0.16&quot;' />
          <member value='&quot;0.17&quot;' />
          <member value='&quot;0.18&quot;' />
          <member value='&quot;0.19&quot;' />
          <member value='&quot;0.21&quot;' />
          <member value='&quot;0.22&quot;' />
          <member value='&quot;0.23&quot;' />
          <member value='&quot;0.24&quot;' />
          <member value='&quot;0.25&quot;' />
          <member value='&quot;0.26&quot;' />
          <member value='&quot;0.27&quot;' />
          <member value='&quot;0.28&quot;' />
          <member value='&quot;0.29&quot;' />
          <member value='&quot;0.31&quot;' />
          <member value='&quot;0.32&quot;' />
          <member value='&quot;0.33&quot;' />
          <member value='&quot;0.69&quot;' />
          <member value='&quot;0.76&quot;' />
          <member value='&quot;0.79&quot;' />
          <member value='&quot;0.94&quot;' />
          <member value='&quot;0.99&quot;' />
          <member value='&quot;0.003&quot;' />
          <member value='&quot;0.008&quot;' />
          <member value='&quot;0.009&quot;' />
          <member value='&quot;0.015&quot;' />
          <member value='&quot;0.018&quot;' />
          <member value='&quot;0.022&quot;' />
          <member value='&quot;0.024&quot;' />
          <member value='&quot;0.027&quot;' />
          <member value='&quot;0.028&quot;' />
          <member value='&quot;0.036&quot;' />
          <member value='&quot;0.037&quot;' />
          <member value='&quot;0.041&quot;' />
          <member value='&quot;0.043&quot;' />
          <member value='&quot;0.045&quot;' />
          <member value='&quot;0.049&quot;' />
          <member value='&quot;0.051&quot;' />
          <member value='&quot;0.054&quot;' />
          <member value='&quot;0.055&quot;' />
          <member value='&quot;0.057&quot;' />
          <member value='&quot;0.059&quot;' />
          <member value='&quot;0.063&quot;' />
          <member value='&quot;0.064&quot;' />
          <member value='&quot;0.065&quot;' />
          <member value='&quot;0.066&quot;' />
          <member value='&quot;0.067&quot;' />
          <member value='&quot;0.068&quot;' />
          <member value='&quot;0.069&quot;' />
          <member value='&quot;0.071&quot;' />
          <member value='&quot;0.073&quot;' />
          <member value='&quot;0.075&quot;' />
          <member value='&quot;0.076&quot;' />
          <member value='&quot;0.079&quot;' />
          <member value='&quot;0.081&quot;' />
          <member value='&quot;0.082&quot;' />
          <member value='&quot;0.083&quot;' />
          <member value='&quot;0.084&quot;' />
          <member value='&quot;0.085&quot;' />
          <member value='&quot;0.087&quot;' />
          <member value='&quot;0.089&quot;' />
          <member value='&quot;0.091&quot;' />
          <member value='&quot;0.092&quot;' />
          <member value='&quot;0.093&quot;' />
          <member value='&quot;0.094&quot;' />
          <member value='&quot;0.095&quot;' />
          <member value='&quot;0.096&quot;' />
          <member value='&quot;0.097&quot;' />
          <member value='&quot;0.101&quot;' />
          <member value='&quot;0.102&quot;' />
          <member value='&quot;0.103&quot;' />
          <member value='&quot;0.104&quot;' />
          <member value='&quot;0.105&quot;' />
          <member value='&quot;0.106&quot;' />
          <member value='&quot;0.107&quot;' />
          <member value='&quot;0.108&quot;' />
          <member value='&quot;0.109&quot;' />
          <member value='&quot;0.111&quot;' />
          <member value='&quot;0.112&quot;' />
          <member value='&quot;0.113&quot;' />
          <member value='&quot;0.114&quot;' />
          <member value='&quot;0.115&quot;' />
          <member value='&quot;0.116&quot;' />
          <member value='&quot;0.117&quot;' />
          <member value='&quot;0.118&quot;' />
          <member value='&quot;0.119&quot;' />
          <member value='&quot;0.121&quot;' />
          <member value='&quot;0.122&quot;' />
          <member value='&quot;0.123&quot;' />
          <member value='&quot;0.124&quot;' />
          <member value='&quot;0.125&quot;' />
          <member value='&quot;0.126&quot;' />
          <member value='&quot;0.127&quot;' />
          <member value='&quot;0.128&quot;' />
          <member value='&quot;0.129&quot;' />
          <member value='&quot;0.131&quot;' />
          <member value='&quot;0.132&quot;' />
          <member value='&quot;0.133&quot;' />
          <member value='&quot;0.134&quot;' />
          <member value='&quot;0.135&quot;' />
          <member value='&quot;0.136&quot;' />
          <member value='&quot;0.137&quot;' />
          <member value='&quot;0.138&quot;' />
          <member value='&quot;0.139&quot;' />
          <member value='&quot;0.141&quot;' />
          <member value='&quot;0.142&quot;' />
          <member value='&quot;0.143&quot;' />
          <member value='&quot;0.144&quot;' />
          <member value='&quot;0.145&quot;' />
          <member value='&quot;0.146&quot;' />
          <member value='&quot;0.147&quot;' />
          <member value='&quot;0.148&quot;' />
          <member value='&quot;0.149&quot;' />
          <member value='&quot;0.151&quot;' />
          <member value='&quot;0.152&quot;' />
          <member value='&quot;0.153&quot;' />
          <member value='&quot;0.154&quot;' />
          <member value='&quot;0.155&quot;' />
          <member value='&quot;0.156&quot;' />
          <member value='&quot;0.157&quot;' />
          <member value='&quot;0.158&quot;' />
          <member value='&quot;0.159&quot;' />
          <member value='&quot;0.161&quot;' />
          <member value='&quot;0.162&quot;' />
          <member value='&quot;0.163&quot;' />
          <member value='&quot;0.164&quot;' />
          <member value='&quot;0.165&quot;' />
          <member value='&quot;0.166&quot;' />
          <member value='&quot;0.167&quot;' />
          <member value='&quot;0.168&quot;' />
          <member value='&quot;0.169&quot;' />
          <member value='&quot;0.171&quot;' />
          <member value='&quot;0.172&quot;' />
          <member value='&quot;0.173&quot;' />
          <member value='&quot;0.174&quot;' />
          <member value='&quot;0.175&quot;' />
          <member value='&quot;0.176&quot;' />
          <member value='&quot;0.177&quot;' />
          <member value='&quot;0.178&quot;' />
          <member value='&quot;0.179&quot;' />
          <member value='&quot;0.181&quot;' />
          <member value='&quot;0.182&quot;' />
          <member value='&quot;0.183&quot;' />
          <member value='&quot;0.184&quot;' />
          <member value='&quot;0.185&quot;' />
          <member value='&quot;0.186&quot;' />
          <member value='&quot;0.187&quot;' />
          <member value='&quot;0.188&quot;' />
          <member value='&quot;0.189&quot;' />
          <member value='&quot;0.191&quot;' />
          <member value='&quot;0.192&quot;' />
          <member value='&quot;0.193&quot;' />
          <member value='&quot;0.194&quot;' />
          <member value='&quot;0.195&quot;' />
          <member value='&quot;0.196&quot;' />
          <member value='&quot;0.197&quot;' />
          <member value='&quot;0.198&quot;' />
          <member value='&quot;0.199&quot;' />
          <member value='&quot;0.201&quot;' />
          <member value='&quot;0.202&quot;' />
          <member value='&quot;0.203&quot;' />
          <member value='&quot;0.204&quot;' />
          <member value='&quot;0.205&quot;' />
          <member value='&quot;0.206&quot;' />
          <member value='&quot;0.207&quot;' />
          <member value='&quot;0.208&quot;' />
          <member value='&quot;0.209&quot;' />
          <member value='&quot;0.211&quot;' />
          <member value='&quot;0.212&quot;' />
          <member value='&quot;0.213&quot;' />
          <member value='&quot;0.214&quot;' />
          <member value='&quot;0.215&quot;' />
          <member value='&quot;0.216&quot;' />
          <member value='&quot;0.217&quot;' />
          <member value='&quot;0.218&quot;' />
          <member value='&quot;0.219&quot;' />
          <member value='&quot;0.221&quot;' />
          <member value='&quot;0.222&quot;' />
          <member value='&quot;0.223&quot;' />
          <member value='&quot;0.224&quot;' />
          <member value='&quot;0.227&quot;' />
          <member value='&quot;0.229&quot;' />
          <member value='&quot;0.231&quot;' />
          <member value='&quot;0.232&quot;' />
          <member value='&quot;0.233&quot;' />
          <member value='&quot;0.234&quot;' />
          <member value='&quot;0.235&quot;' />
          <member value='&quot;0.237&quot;' />
          <member value='&quot;0.238&quot;' />
          <member value='&quot;0.239&quot;' />
          <member value='&quot;0.241&quot;' />
          <member value='&quot;0.242&quot;' />
          <member value='&quot;0.243&quot;' />
          <member value='&quot;0.244&quot;' />
          <member value='&quot;0.245&quot;' />
          <member value='&quot;0.246&quot;' />
          <member value='&quot;0.247&quot;' />
          <member value='&quot;0.248&quot;' />
          <member value='&quot;0.252&quot;' />
          <member value='&quot;0.254&quot;' />
          <member value='&quot;0.256&quot;' />
          <member value='&quot;0.258&quot;' />
          <member value='&quot;0.261&quot;' />
          <member value='&quot;0.263&quot;' />
          <member value='&quot;0.264&quot;' />
          <member value='&quot;0.265&quot;' />
          <member value='&quot;0.272&quot;' />
          <member value='&quot;0.273&quot;' />
          <member value='&quot;0.274&quot;' />
          <member value='&quot;0.278&quot;' />
          <member value='&quot;0.279&quot;' />
          <member value='&quot;0.281&quot;' />
          <member value='&quot;0.292&quot;' />
          <member value='&quot;0.295&quot;' />
          <member value='&quot;0.296&quot;' />
          <member value='&quot;0.297&quot;' />
          <member value='&quot;0.304&quot;' />
          <member value='&quot;0.306&quot;' />
          <member value='&quot;0.307&quot;' />
          <member value='&quot;0.312&quot;' />
          <member value='&quot;0.313&quot;' />
          <member value='&quot;0.315&quot;' />
          <member value='&quot;0.316&quot;' />
          <member value='&quot;0.321&quot;' />
          <member value='&quot;0.328&quot;' />
          <member value='&quot;0.334&quot;' />
          <member value='&quot;0.371&quot;' />
          <member value='&quot;0.377&quot;' />
          <member value='&quot;0.385&quot;' />
          <member value='&quot;0.411&quot;' />
          <member value='&quot;No Data&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='TotalCrashData (2yearsCrash)' inline='true' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2yearsCrash' name='excel-direct.0mvi5451frhs4y1adrm8804zb643'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kevin/OneDrive/Documents/data analytics/CarAccidentproj/2yearsCrash.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0mvi5451frhs4y1adrm8804zb643' name='TotalCrashData' table='[TotalCrashData$]' type='table'>
          <columns gridOrigin='A1:W10001:no:A1:W10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='CrashId' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='date' name='CrashDate' ordinal='3' />
            <column datatype='string' name='CrashSeverity' ordinal='4' />
            <column datatype='integer' name='CrashTime' ordinal='5' />
            <column datatype='real' name='Latitude' ordinal='6' />
            <column datatype='real' name='Longitude' ordinal='7' />
            <column datatype='integer' name='SpeedLimit' ordinal='8' />
            <column datatype='string' name='SurfaceCondition' ordinal='9' />
            <column datatype='string' name='WeatherCondition' ordinal='10' />
            <column datatype='string' name='DriverBAC' ordinal='11' />
            <column datatype='string' name='DriverDrugTest' ordinal='12' />
            <column datatype='string' name='VehicleMake' ordinal='13' />
            <column datatype='integer' name='VehicleModelYear' ordinal='14' />
            <column datatype='string' name='Charge' ordinal='15' />
            <column datatype='string' name='Citation' ordinal='16' />
            <column datatype='string' name='PersonAge' ordinal='17' />
            <column datatype='string' name='AirbagDeployment' ordinal='18' />
            <column datatype='string' name='PersonGender' ordinal='19' />
            <column datatype='string' name='InjurySeverity' ordinal='20' />
            <column datatype='integer' name='PersonTotalInjuryCount' ordinal='21' />
            <column datatype='datetime' date-parse-format='HHmm' name='ModTime' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0mvi5451frhs4y1adrm8804zb643' name='TotalCrashData' table='[TotalCrashData$]' type='table'>
          <columns gridOrigin='A1:W10001:no:A1:W10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='CrashId' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='date' name='CrashDate' ordinal='3' />
            <column datatype='string' name='CrashSeverity' ordinal='4' />
            <column datatype='integer' name='CrashTime' ordinal='5' />
            <column datatype='real' name='Latitude' ordinal='6' />
            <column datatype='real' name='Longitude' ordinal='7' />
            <column datatype='integer' name='SpeedLimit' ordinal='8' />
            <column datatype='string' name='SurfaceCondition' ordinal='9' />
            <column datatype='string' name='WeatherCondition' ordinal='10' />
            <column datatype='string' name='DriverBAC' ordinal='11' />
            <column datatype='string' name='DriverDrugTest' ordinal='12' />
            <column datatype='string' name='VehicleMake' ordinal='13' />
            <column datatype='integer' name='VehicleModelYear' ordinal='14' />
            <column datatype='string' name='Charge' ordinal='15' />
            <column datatype='string' name='Citation' ordinal='16' />
            <column datatype='string' name='PersonAge' ordinal='17' />
            <column datatype='string' name='AirbagDeployment' ordinal='18' />
            <column datatype='string' name='PersonGender' ordinal='19' />
            <column datatype='string' name='InjurySeverity' ordinal='20' />
            <column datatype='integer' name='PersonTotalInjuryCount' ordinal='21' />
            <column datatype='datetime' date-parse-format='HHmm' name='ModTime' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W10001:no:A1:W10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrashId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CrashId]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>CrashId</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrashDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[CrashDate]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>CrashDate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrashSeverity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CrashSeverity]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>CrashSeverity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CrashTime</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CrashTime]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>CrashTime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SpeedLimit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SpeedLimit]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>SpeedLimit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SurfaceCondition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SurfaceCondition]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>SurfaceCondition</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WeatherCondition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WeatherCondition]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>WeatherCondition</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DriverBAC</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DriverBAC]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>DriverBAC</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DriverDrugTest</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DriverDrugTest]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>DriverDrugTest</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VehicleMake</remote-name>
            <remote-type>130</remote-type>
            <local-name>[VehicleMake]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>VehicleMake</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VehicleModelYear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VehicleModelYear]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>VehicleModelYear</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Charge</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Charge]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>Charge</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Citation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Citation]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>Citation</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PersonAge</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PersonAge]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>PersonAge</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirbagDeployment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirbagDeployment]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>AirbagDeployment</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PersonGender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PersonGender]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>PersonGender</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InjurySeverity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[InjurySeverity]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>InjurySeverity</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PersonTotalInjuryCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PersonTotalInjuryCount]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>PersonTotalInjuryCount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ModTime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ModTime]</local-name>
            <parent-name>[TotalCrashData]</parent-name>
            <remote-alias>ModTime</remote-alias>
            <ordinal>22</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airbag Deployment' datatype='string' name='[AirbagDeployment]' role='dimension' type='nominal' />
      <column caption='Year of Accident' datatype='integer' name='[Calculation_2174112759582851072]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='year([CrashDate])' />
      </column>
      <column caption='Latest Year Accidents' datatype='integer' name='[Calculation_2174112759584202754]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd(if&#13;&#10;(year([CrashDate])) = [Parameters].[Parameter 1]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
      </column>
      <column caption='YearOverYearAccidents' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[Calculation_2174112759604658180]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2174112759584202754]-[Latest Year Accidents (copy)_2174112759603572739])/[Latest Year Accidents (copy)_2174112759603572739]' />
      </column>
      <column caption='LatestYearFatality' datatype='integer' name='[Calculation_2174112759618998279]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;fatal injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
      <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
      <column caption='Crash Severity' datatype='string' name='[CrashSeverity]' role='dimension' type='nominal' />
      <column caption='Crash Time' datatype='integer' name='[CrashTime]' role='measure' type='quantitative' />
      <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
      <column caption='Driver Drug Test' datatype='string' name='[DriverDrugTest]' role='dimension' type='nominal' />
      <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
      <column caption='Previous Year Accidents' datatype='integer' name='[Latest Year Accidents (copy)_2174112759603572739]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd(if&#13;&#10;year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
      </column>
      <column caption='PreviousYearFatality ' datatype='integer' name='[LatestYearFatality (copy)_2174112759620550664]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;fatal injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
      </column>
      <column caption='LatestYearSeriousInjury' datatype='integer' name='[LatestYearFatality (copy)_2174112759624765451]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected serious injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
      </column>
      <column caption='LatestYearMinorInjury' datatype='integer' name='[LatestYearSeriousInjury (copy)_2174112759632031759]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected minor injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
      </column>
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
      <column caption='Person Age' datatype='string' name='[PersonAge]' role='dimension' type='nominal' />
      <column caption='Person Gender' datatype='string' name='[PersonGender]' role='dimension' type='nominal' />
      <column caption='Person Total Injury Count' datatype='integer' name='[PersonTotalInjuryCount]' role='measure' type='quantitative' />
      <column caption='PreviousYearSeriousInjury' datatype='integer' name='[PreviousYearFatality  (copy)_2174112759624790028]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected serious injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
      </column>
      <column caption='PreviousYearMinorInjury' datatype='integer' name='[PreviousYearSeriousInjury (copy)_2174112759632224272]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected minor injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
      </column>
      <column caption='Speed Limit' datatype='integer' name='[SpeedLimit]' role='measure' type='quantitative' />
      <column caption='Surface Condition' datatype='string' name='[SurfaceCondition]' role='dimension' type='nominal' />
      <column caption='Vehicle Make' datatype='string' name='[VehicleMake]' role='dimension' type='nominal' />
      <column caption='Vehicle Model Year' datatype='integer' name='[VehicleModelYear]' role='dimension' type='quantitative' />
      <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
      <column caption='YoY Fataility' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[YearOverYearAccidents (copy)_2174112759620821001]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_2174112759618998279]-[LatestYearFatality (copy)_2174112759620550664])&#13;&#10;/[LatestYearFatality (copy)_2174112759620550664]' />
      </column>
      <column caption='YoY Serious Injury' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[YoY Fataility (copy)_2174112759625039885]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([LatestYearFatality (copy)_2174112759624765451]-[PreviousYearFatality  (copy)_2174112759624790028])&#13;&#10;/[PreviousYearFatality  (copy)_2174112759624790028]' />
      </column>
      <column caption='YoY Minor Injury' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[YoY Serious Injury (copy)_2174112759632314385]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([LatestYearSeriousInjury (copy)_2174112759632031759]-[PreviousYearSeriousInjury (copy)_2174112759632224272])&#13;&#10;/[PreviousYearSeriousInjury (copy)_2174112759632224272]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='TotalCrashData' datatype='table' name='[__tableau_internal_object_id__].[TotalCrashData_6709EB56B42347BAB63497164CEE2702]' role='measure' type='quantitative' />
      <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
      <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2174112759584202754]' derivation='User' name='[usr:Calculation_2174112759584202754:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2174112759618998279]' derivation='User' name='[usr:Calculation_2174112759618998279:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Latest Year Accidents (copy)_2174112759603572739]' derivation='User' name='[usr:Latest Year Accidents (copy)_2174112759603572739:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LatestYearFatality (copy)_2174112759620550664]' derivation='User' name='[usr:LatestYearFatality (copy)_2174112759620550664:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LatestYearFatality (copy)_2174112759624765451]' derivation='User' name='[usr:LatestYearFatality (copy)_2174112759624765451:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LatestYearSeriousInjury (copy)_2174112759632031759]' derivation='User' name='[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PreviousYearFatality  (copy)_2174112759624790028]' derivation='User' name='[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PreviousYearSeriousInjury (copy)_2174112759632224272]' derivation='User' name='[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk]' pivot='key' type='quantitative' />
      <group caption='Drunk Driver' name='[Driver BAC Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:DriverBAC:nk]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[none:DriverBAC:nk]' member='&quot;0&quot;' />
            <groupfilter function='member' level='[none:DriverBAC:nk]' member='&quot;0.003&quot;' />
            <groupfilter function='member' level='[none:DriverBAC:nk]' member='&quot;No Data&quot;' />
            <groupfilter function='member' level='[none:DriverBAC:nk]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/kevin/OneDrive/Documents/data analytics/CarAccidentproj/TotalCrashData (2yearsCrash).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/02/2024 12:56:01 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='TotalCrashData (2yearsCrash)' increment-value='%null%' refresh-type='create' rows-inserted='92077' timestamp-start='2024-01-02 00:55:54.912' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CrashId</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CrashId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CrashId</remote-alias>
              <ordinal>0</ordinal>
              <family>TotalCrashData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40851</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>1</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>County</remote-name>
              <remote-type>129</remote-type>
              <local-name>[County]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>County</remote-alias>
              <ordinal>2</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CrashDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[CrashDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CrashDate</remote-alias>
              <ordinal>3</ordinal>
              <family>TotalCrashData</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2770</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CrashSeverity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CrashSeverity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CrashSeverity</remote-alias>
              <ordinal>4</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CrashTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CrashTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CrashTime</remote-alias>
              <ordinal>5</ordinal>
              <family>TotalCrashData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4826</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>6</ordinal>
              <family>TotalCrashData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21339</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>7</ordinal>
              <family>TotalCrashData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21591</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SpeedLimit</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SpeedLimit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SpeedLimit</remote-alias>
              <ordinal>8</ordinal>
              <family>TotalCrashData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SurfaceCondition</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SurfaceCondition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SurfaceCondition</remote-alias>
              <ordinal>9</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WeatherCondition</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WeatherCondition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WeatherCondition</remote-alias>
              <ordinal>10</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DriverBAC</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DriverBAC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DriverBAC</remote-alias>
              <ordinal>11</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>621</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DriverDrugTest</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DriverDrugTest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DriverDrugTest</remote-alias>
              <ordinal>12</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VehicleMake</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VehicleMake]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VehicleMake</remote-alias>
              <ordinal>13</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>166</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VehicleModelYear</remote-name>
              <remote-type>20</remote-type>
              <local-name>[VehicleModelYear]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VehicleModelYear</remote-alias>
              <ordinal>14</ordinal>
              <family>TotalCrashData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Charge</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Charge]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Charge</remote-alias>
              <ordinal>15</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1415</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Citation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Citation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Citation</remote-alias>
              <ordinal>16</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13903</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PersonAge</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PersonAge]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PersonAge</remote-alias>
              <ordinal>17</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirbagDeployment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AirbagDeployment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirbagDeployment</remote-alias>
              <ordinal>18</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PersonGender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PersonGender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PersonGender</remote-alias>
              <ordinal>19</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InjurySeverity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[InjurySeverity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>InjurySeverity</remote-alias>
              <ordinal>20</ordinal>
              <family>TotalCrashData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PersonTotalInjuryCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PersonTotalInjuryCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PersonTotalInjuryCount</remote-alias>
              <ordinal>21</ordinal>
              <family>TotalCrashData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ModTime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[ModTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ModTime</remote-alias>
              <ordinal>22</ordinal>
              <family>TotalCrashData</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4826</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TotalCrashData_6709EB56B42347BAB63497164CEE2702]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:WeatherCondition:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BLOWING SAND/SNOW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OTHER (EXPLAIN IN NARRATIVE)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;FOG&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SNOW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SEVERE CROSSWINDS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UNKNOWN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CLOUDY&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;RAIN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CLEAR&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SLEET/HAIL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759624765451:qk]&quot;</bucket>
            </map>
            <map to='#26897e'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk]&quot;</bucket>
            </map>
            <map to='#300561'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759618998279:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759620550664:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
          <calculation class='tableau' formula='2021' />
          <aliases>
            <alias key='2021' value='2021' />
            <alias key='2022' value='2022' />
          </aliases>
        </column>
        <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
          <calculation class='tableau' formula='2022' />
          <aliases>
            <alias key='2021' value='2021' />
            <alias key='2022' value='2022' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='TotalCrashData' id='TotalCrashData_6709EB56B42347BAB63497164CEE2702'>
            <properties context=''>
              <relation connection='excel-direct.0mvi5451frhs4y1adrm8804zb643' name='TotalCrashData' table='[TotalCrashData$]' type='table'>
                <columns gridOrigin='A1:W10001:no:A1:W10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='CrashId' ordinal='0' />
                  <column datatype='string' name='City' ordinal='1' />
                  <column datatype='string' name='County' ordinal='2' />
                  <column datatype='date' name='CrashDate' ordinal='3' />
                  <column datatype='string' name='CrashSeverity' ordinal='4' />
                  <column datatype='integer' name='CrashTime' ordinal='5' />
                  <column datatype='real' name='Latitude' ordinal='6' />
                  <column datatype='real' name='Longitude' ordinal='7' />
                  <column datatype='integer' name='SpeedLimit' ordinal='8' />
                  <column datatype='string' name='SurfaceCondition' ordinal='9' />
                  <column datatype='string' name='WeatherCondition' ordinal='10' />
                  <column datatype='string' name='DriverBAC' ordinal='11' />
                  <column datatype='string' name='DriverDrugTest' ordinal='12' />
                  <column datatype='string' name='VehicleMake' ordinal='13' />
                  <column datatype='integer' name='VehicleModelYear' ordinal='14' />
                  <column datatype='string' name='Charge' ordinal='15' />
                  <column datatype='string' name='Citation' ordinal='16' />
                  <column datatype='string' name='PersonAge' ordinal='17' />
                  <column datatype='string' name='AirbagDeployment' ordinal='18' />
                  <column datatype='string' name='PersonGender' ordinal='19' />
                  <column datatype='string' name='InjurySeverity' ordinal='20' />
                  <column datatype='integer' name='PersonTotalInjuryCount' ordinal='21' />
                  <column datatype='datetime' date-parse-format='HHmm' name='ModTime' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Accident Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Latest Year Accidents' datatype='integer' name='[Calculation_2174112759584202754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;(year([CrashDate])) = [Parameters].[Parameter 1]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='YearOverYearAccidents' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[Calculation_2174112759604658180]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2174112759584202754]-[Latest Year Accidents (copy)_2174112759603572739])/[Latest Year Accidents (copy)_2174112759603572739]' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Previous Year Accidents' datatype='integer' name='[Latest Year Accidents (copy)_2174112759603572739]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759584202754]' derivation='User' name='[usr:Calculation_2174112759584202754:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2174112759604658180]' derivation='User' name='[usr:Calculation_2174112759604658180:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latest Year Accidents (copy)_2174112759603572739]' derivation='User' name='[usr:Latest Year Accidents (copy)_2174112759603572739:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='1' />
            <format attr='border-style' data-class='total' scope='cols' value='solid' />
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' value='#00000000' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-color' scope='cols' value='#72b966' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' value='Drunk Driver' />
            <format attr='background-color' value='#eff3e3' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#4e79a7' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759604658180:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='15'>Total Accidents</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='20'><![CDATA[<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759604658180:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C46151F4-2DCE-40C4-9479-E8EB99E7CFBE}' />
    </worksheet>
    <worksheet name='AccidentGraph'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Latest Year Accidents' datatype='integer' name='[Calculation_2174112759584202754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;(year([CrashDate])) = [Parameters].[Parameter 1]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Previous Year Accidents' datatype='integer' name='[Latest Year Accidents (copy)_2174112759603572739]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrashDate]' derivation='Month' name='[mn:CrashDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759584202754]' derivation='User' name='[usr:Calculation_2174112759584202754:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latest Year Accidents (copy)_2174112759603572739]' derivation='User' name='[usr:Latest Year Accidents (copy)_2174112759603572739:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='#f9f8f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='iLLL' />
            <format attr='text-orientation' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]' value='' />
            <format attr='display-alternate-text' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]' value='false' />
            <format attr='background-color' value='#f9f8f7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' value='Weather &#10;Condition' />
            <format attr='background-color' value='#f9e9e0' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#4e79a7' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk] + [federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk])</rows>
        <cols>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]</cols>
      </table>
      <simple-id uuid='{522DF363-5A93-499B-8B8A-51241403E47A}' />
    </worksheet>
    <worksheet name='CarType'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Latest Year Accidents' datatype='integer' name='[Calculation_2174112759584202754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;(year([CrashDate])) = [Parameters].[Parameter 1]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Vehicle Make' datatype='string' name='[VehicleMake]' role='dimension' type='nominal' />
            <column-instance column='[VehicleMake]' derivation='None' name='[none:VehicleMake:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759584202754]' derivation='User' name='[usr:Calculation_2174112759584202754:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:VehicleMake:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]' field-type='quantitative' max='5517' min='-397' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]</rows>
        <cols>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:VehicleMake:nk]</cols>
      </table>
      <simple-id uuid='{13C23202-9036-407A-A6D3-F472262D05CF}' />
    </worksheet>
    <worksheet name='DeathLocations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759'>Fatal Accident Locations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrashId]' derivation='None' name='[none:CrashId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[InjurySeverity]' derivation='None' name='[none:InjurySeverity:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrashDate]' derivation='Year' name='[yr:CrashDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:InjurySeverity:nk]'>
            <groupfilter function='member' level='[none:InjurySeverity:nk]' member='&quot;FATAL INJURY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]'>
            <groupfilter function='level-members' level='[yr:CrashDate:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:InjurySeverity:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[avg:Longitude:qk]' field-type='quantitative' max='-10841096.82495301' min='-10913877.895576589' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[avg:Latitude:qk]' field-type='quantitative' max='3565248.7650247505' min='3516176.0192186898' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]' value='Crash Year&#10;(Map)' />
            <format attr='background-color' value='#f5ead7' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='3' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:CrashId:ok]' />
              <geometry column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[avg:Latitude:qk]</rows>
        <cols>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[avg:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{944B3A76-ADEB-4EF8-AB0C-5FB95A14424C}' />
    </worksheet>
    <worksheet name='Drunk driver'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Latest Year Accidents' datatype='integer' name='[Calculation_2174112759584202754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;(year([CrashDate])) = [Parameters].[Parameter 1]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759584202754]' derivation='User' name='[usr:Calculation_2174112759584202754:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[io:Driver BAC Set:nk]' member='false' />
              <groupfilter function='member' level='[io:Driver BAC Set:nk]' member='true' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B1EBAC6D-B0C3-441C-A753-0F592D843CA1}' />
    </worksheet>
    <worksheet name='FatailityCount'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='LatestYearFatality' datatype='integer' name='[Calculation_2174112759618998279]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;fatal injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column caption='PreviousYearFatality ' datatype='integer' name='[LatestYearFatality (copy)_2174112759620550664]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;fatal injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column caption='YoY Fataility' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[YearOverYearAccidents (copy)_2174112759620821001]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_2174112759618998279]-[LatestYearFatality (copy)_2174112759620550664])&#13;&#10;/[LatestYearFatality (copy)_2174112759620550664]' />
            </column>
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759618998279]' derivation='User' name='[usr:Calculation_2174112759618998279:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LatestYearFatality (copy)_2174112759620550664]' derivation='User' name='[usr:LatestYearFatality (copy)_2174112759620550664:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YearOverYearAccidents (copy)_2174112759620821001]' derivation='User' name='[usr:YearOverYearAccidents (copy)_2174112759620821001:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='217' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759618998279:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759620550664:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:YearOverYearAccidents (copy)_2174112759620821001:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f9a655' fontsize='15'>Total Fatilities</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='20'><![CDATA[<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759618998279:qk]>]]></run>
                <run><![CDATA[
<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:YearOverYearAccidents (copy)_2174112759620821001:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CD9DF8BD-081F-434E-9E80-F23F9E9044AF}' />
    </worksheet>
    <worksheet name='FatalityGraph'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='LatestYearFatality' datatype='integer' name='[Calculation_2174112759618998279]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;fatal injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column caption='PreviousYearFatality ' datatype='integer' name='[LatestYearFatality (copy)_2174112759620550664]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;fatal injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrashDate]' derivation='Month' name='[mn:CrashDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759618998279]' derivation='User' name='[usr:Calculation_2174112759618998279:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LatestYearFatality (copy)_2174112759620550664]' derivation='User' name='[usr:LatestYearFatality (copy)_2174112759620550664:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759620550664:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='#f9f8f7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='true' />
            <format attr='text-format' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='iLLL' />
            <format attr='text-orientation' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f8f7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759618998279:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759620550664:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759618998279:qk] + [federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759620550664:qk])</rows>
        <cols>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]</cols>
      </table>
      <simple-id uuid='{FF0D6430-DBFE-4A71-878A-489A55AC43AF}' />
    </worksheet>
    <worksheet name='InjurySpread'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
          </datasources>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column-instance column='[CrashId]' derivation='Count' name='[cnt:CrashId:qk]' pivot='key' type='quantitative' />
            <column-instance column='[InjurySeverity]' derivation='None' name='[none:InjurySeverity:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrashDate]' derivation='Year' name='[yr:CrashDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]'>
            <groupfilter function='member' level='[yr:CrashDate:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:InjurySeverity:nk]' />
              <wedge-size column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[cnt:CrashId:qk]' />
              <size column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[cnt:CrashId:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{31608028-CA8D-44B7-B566-24BA869ED6FA}' />
    </worksheet>
    <worksheet name='MinorInjuryCount'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column caption='LatestYearMinorInjury' datatype='integer' name='[LatestYearSeriousInjury (copy)_2174112759632031759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected minor injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='PreviousYearMinorInjury' datatype='integer' name='[PreviousYearSeriousInjury (copy)_2174112759632224272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected minor injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column caption='YoY Minor Injury' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[YoY Serious Injury (copy)_2174112759632314385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([LatestYearSeriousInjury (copy)_2174112759632031759]-[PreviousYearSeriousInjury (copy)_2174112759632224272])&#13;&#10;/[PreviousYearSeriousInjury (copy)_2174112759632224272]' />
            </column>
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[LatestYearSeriousInjury (copy)_2174112759632031759]' derivation='User' name='[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PreviousYearSeriousInjury (copy)_2174112759632224272]' derivation='User' name='[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Serious Injury (copy)_2174112759632314385]' derivation='User' name='[usr:YoY Serious Injury (copy)_2174112759632314385:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:YoY Serious Injury (copy)_2174112759632314385:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#69aaa5' fontsize='15'>Total Minor </run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#69aaa5' fontsize='15'>Injuries</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='20'><![CDATA[<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk]>]]></run>
                <run><![CDATA[
<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:YoY Serious Injury (copy)_2174112759632314385:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2F079D1D-E18D-45F8-9CBD-F6F3C65E154A}' />
    </worksheet>
    <worksheet name='MinorInjuryGraph'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column caption='LatestYearMinorInjury' datatype='integer' name='[LatestYearSeriousInjury (copy)_2174112759632031759]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected minor injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='PreviousYearMinorInjury' datatype='integer' name='[PreviousYearSeriousInjury (copy)_2174112759632224272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected minor injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrashDate]' derivation='Month' name='[mn:CrashDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[LatestYearSeriousInjury (copy)_2174112759632031759]' derivation='User' name='[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PreviousYearSeriousInjury (copy)_2174112759632224272]' derivation='User' name='[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='iLLL' />
            <format attr='text-orientation' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f8f7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearSeriousInjury (copy)_2174112759632031759:qk] + [federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearSeriousInjury (copy)_2174112759632224272:qk])</rows>
        <cols>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]</cols>
      </table>
      <simple-id uuid='{AC3F631E-A2E8-4498-9C62-4D121AA83238}' />
    </worksheet>
    <worksheet name='Serious Injury Count'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column caption='LatestYearSeriousInjury' datatype='integer' name='[LatestYearFatality (copy)_2174112759624765451]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected serious injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='PreviousYearSeriousInjury' datatype='integer' name='[PreviousYearFatality  (copy)_2174112759624790028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected serious injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column caption='YoY Serious Injury' datatype='real' default-format='*▲ 0.00%;▼ 0.00%' name='[YoY Fataility (copy)_2174112759625039885]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([LatestYearFatality (copy)_2174112759624765451]-[PreviousYearFatality  (copy)_2174112759624790028])&#13;&#10;/[PreviousYearFatality  (copy)_2174112759624790028]' />
            </column>
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[LatestYearFatality (copy)_2174112759624765451]' derivation='User' name='[usr:LatestYearFatality (copy)_2174112759624765451:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PreviousYearFatality  (copy)_2174112759624790028]' derivation='User' name='[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YoY Fataility (copy)_2174112759625039885]' derivation='User' name='[usr:YoY Fataility (copy)_2174112759625039885:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759624765451:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]' />
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:YoY Fataility (copy)_2174112759625039885:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#d37295' fontsize='15'>Total Serious </run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#d37295' fontsize='15'>Injuries</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='20'><![CDATA[<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759624765451:qk]>]]></run>
                <run><![CDATA[
<[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:YoY Fataility (copy)_2174112759625039885:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DCB93321-6A16-4E4D-A19F-E5F44FEA1D0F}' />
    </worksheet>
    <worksheet name='SeriousInjuryGraph'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Injury Severity' datatype='string' name='[InjurySeverity]' role='dimension' type='nominal' />
            <column caption='LatestYearSeriousInjury' datatype='integer' name='[LatestYearFatality (copy)_2174112759624765451]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected serious injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Parameter 1]&#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='PreviousYearSeriousInjury' datatype='integer' name='[PreviousYearFatality  (copy)_2174112759624790028]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if([InjurySeverity]) = &apos;suspected serious injury&apos;&#13;&#10;and year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]        &#13;&#10;then [InjurySeverity] end)' />
            </column>
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[CrashDate]' derivation='Month' name='[mn:CrashDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[LatestYearFatality (copy)_2174112759624765451]' derivation='User' name='[usr:LatestYearFatality (copy)_2174112759624765451:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PreviousYearFatality  (copy)_2174112759624790028]' derivation='User' name='[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='iLLL' />
            <format attr='text-orientation' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9f8f7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759624765451:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759624765451:qk] + [federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearFatality  (copy)_2174112759624790028:qk])</rows>
        <cols>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[mn:CrashDate:ok]</cols>
      </table>
      <simple-id uuid='{1E555D95-D65D-4558-9DE7-B8E2C504020C}' />
    </worksheet>
    <worksheet name='time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Time of Accident</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
              <calculation class='tableau' formula='2021' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Latest Year Accidents' datatype='integer' name='[Calculation_2174112759584202754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;(year([CrashDate])) = [Parameters].[Parameter 1]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Driver BAC' datatype='string' name='[DriverBAC]' role='dimension' type='nominal' />
            <column caption='Previous Year Accidents' datatype='integer' name='[Latest Year Accidents (copy)_2174112759603572739]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;year([CrashDate]) = [Parameters].[Latest Year (copy)_2174112759583948801]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[DriverBAC]' derivation='None' name='[none:DriverBAC:nk]' pivot='key' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759584202754]' derivation='User' name='[usr:Calculation_2174112759584202754:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latest Year Accidents (copy)_2174112759603572739]' derivation='User' name='[usr:Latest Year Accidents (copy)_2174112759603572739:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' filter-group='7'>
            <groupfilter function='level-members' level='[hr:ModTime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[io:Driver BAC Set:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</column>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f1f0' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' value='Time of Day' />
            <format attr='background-color' value='#f7f1f6' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='3' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk] + [federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Latest Year Accidents (copy)_2174112759603572739:qk])</rows>
        <cols>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</cols>
      </table>
      <simple-id uuid='{DEF312B8-D902-4FA1-82DB-EE854CB79DB3}' />
    </worksheet>
    <worksheet name='title'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
          </datasources>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='24'>Car Accidents in Travis County Dash</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9794E96D-64A6-4D6C-8A3E-32F1A566BEC8}' />
    </worksheet>
    <worksheet name='weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
              <calculation class='tableau' formula='2022' />
              <aliases>
                <alias key='2021' value='2021' />
                <alias key='2022' value='2022' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
            <column caption='Latest Year Accidents' datatype='integer' name='[Calculation_2174112759584202754]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd(if&#13;&#10;(year([CrashDate])) = [Parameters].[Parameter 1]&#13;&#10;then&#13;&#10;[CrashId]&#13;&#10;end)' />
            </column>
            <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
            <column caption='Crash Id' datatype='integer' name='[CrashId]' role='dimension' type='ordinal' />
            <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
            <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2174112759584202754]' derivation='User' name='[usr:Calculation_2174112759584202754:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:WeatherCondition:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' />
              <size column='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759584202754:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3D2B0C26-BD01-49A1-9CDC-5B1E112144A6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#f5f1f0' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#000000' />
          <format attr='border-width' value='3' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='TotalCrashData (2yearsCrash)' name='federated.1dwn52o1mym3yi18o3jyz01wb6sx' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2021' caption='Comparision Year' datatype='integer' name='[Latest Year (copy)_2174112759583948801]' param-domain-type='list' role='measure' type='quantitative' value='2021'>
          <calculation class='tableau' formula='2021' />
          <aliases>
            <alias key='2021' value='2021' />
            <alias key='2022' value='2022' />
          </aliases>
          <members>
            <member alias='2021' value='2021' />
            <member alias='2022' value='2022' />
          </members>
        </column>
        <column alias='2022' caption='Current Year' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='2022'>
          <calculation class='tableau' formula='2022' />
          <aliases>
            <alias key='2021' value='2021' />
            <alias key='2022' value='2022' />
          </aliases>
          <members>
            <member alias='2021' value='2021' />
            <member alias='2022' value='2022' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1dwn52o1mym3yi18o3jyz01wb6sx'>
        <column caption='Crash Date' datatype='date' name='[CrashDate]' role='dimension' type='ordinal' />
        <column caption='Hour' datatype='datetime' name='[ModTime]' role='dimension' type='ordinal' />
        <column caption='Weather Condition' datatype='string' name='[WeatherCondition]' role='dimension' type='nominal' />
        <column-instance column='[ModTime]' derivation='Hour' name='[hr:ModTime:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Driver BAC Set]' derivation='InOut' name='[io:Driver BAC Set:nk]' pivot='key' type='nominal' />
        <column-instance column='[WeatherCondition]' derivation='None' name='[none:WeatherCondition:nk]' pivot='key' type='nominal' />
        <column-instance column='[CrashDate]' derivation='Year' name='[yr:CrashDate:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='51' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98742' id='50' is-scaled='1' param='C:/Users/kevin/OneDrive/Documents/data analytics/CarAccidentproj/back4.jpg' type-v2='bitmap' w='99278' x='361' y='629'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5896' id='6' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='7088' x='58781' y='3459' />
        <zone h='5896' id='7' mode='compact' param='[Parameters].[Latest Year (copy)_2174112759583948801]' type-v2='paramctrl' w='7133' x='66772' y='3538' />
        <zone h='15409' id='8' name='FatailityCount' show-title='false' w='13860' x='1716' y='35770' />
        <zone h='21148' id='9' name='Serious Injury Count' show-title='false' w='14266' x='1761' y='56761' />
        <zone h='20283' id='10' name='MinorInjuryCount' show-title='false' w='14537' x='1851' y='78695' />
        <zone h='16116' id='11' name='Accident Count' show-title='false' w='11558' x='1670' y='14151' />
        <zone h='17531' id='12' name='AccidentGraph' show-title='false' w='27946' x='13454' y='14151' />
        <zone h='17296' id='14' name='FatalityGraph' show-title='false' w='27901' x='13544' y='35692' />
        <zone h='18082' id='15' name='SeriousInjuryGraph' show-title='false' w='27856' x='13679' y='56682' />
        <zone h='17925' id='16' name='MinorInjuryGraph' show-title='false' w='27856' x='13634' y='78145' />
        <zone h='9591' id='18' mode='checkdropdown' name='AccidentGraph' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' type-v2='filter' w='7359' x='90248' y='25000' />
        <zone h='47720' id='19' name='DeathLocations' w='37065' x='48488' y='14151' />
        <zone h='9591' id='20' mode='checkdropdown' name='DeathLocations' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]' type-v2='filter' values='all' w='7314' x='90339' y='14072' />
        <zone h='9827' id='28' mode='checkdropdown' name='Accident Count' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' type-v2='filter' w='7314' x='90293' y='36164' />
        <zone h='30110' id='31' name='time' w='39413' x='47269' y='66038' />
        <zone h='11006' id='32' mode='dropdown' name='time' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' type-v2='filter' w='7810' x='89977' y='47642' />
        <zone h='7390' id='49' name='title' show-title='false' w='50835' x='3837' y='2987' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2500' minheight='2500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='75' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98742' id='74' param='vert' type-v2='layout-flow' w='99278' x='361' y='629'>
                <zone fixed-size='280' h='98742' id='50' is-fixed='true' is-scaled='1' param='C:/Users/kevin/OneDrive/Documents/data analytics/CarAccidentproj/back4.jpg' type-v2='bitmap' w='99278' x='361' y='629'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='7390' id='49' is-fixed='true' name='title' show-title='false' w='50835' x='3837' y='2987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5896' id='6' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='7088' x='58781' y='3459'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5896' id='7' mode='compact' param='[Parameters].[Latest Year (copy)_2174112759583948801]' type-v2='paramctrl' w='7133' x='66772' y='3538'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9827' id='28' mode='checkdropdown' name='Accident Count' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' type-v2='filter' w='7314' x='90293' y='36164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='129' h='16116' id='11' is-fixed='true' name='Accident Count' show-title='false' w='11558' x='1670' y='14151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9591' id='18' mode='checkdropdown' name='AccidentGraph' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' type-v2='filter' w='7359' x='90248' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='140' h='17531' id='12' is-fixed='true' name='AccidentGraph' show-title='false' w='27946' x='13454' y='14151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9591' id='20' mode='checkdropdown' name='DeathLocations' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]' type-v2='filter' values='all' w='7314' x='90339' y='14072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47720' id='19' is-fixed='true' name='DeathLocations' w='37065' x='48488' y='14151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='138' h='17296' id='14' is-fixed='true' name='FatalityGraph' show-title='false' w='27901' x='13544' y='35692'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='123' h='15409' id='8' is-fixed='true' name='FatailityCount' show-title='false' w='13860' x='1716' y='35770'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='18082' id='15' is-fixed='true' name='SeriousInjuryGraph' show-title='false' w='27856' x='13679' y='56682'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='169' h='21148' id='9' is-fixed='true' name='Serious Injury Count' show-title='false' w='14266' x='1761' y='56761'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11006' id='32' mode='dropdown' name='time' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' type-v2='filter' w='7810' x='89977' y='47642'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='241' h='30110' id='31' is-fixed='true' name='time' w='39413' x='47269' y='66038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='144' h='17925' id='16' is-fixed='true' name='MinorInjuryGraph' show-title='false' w='27856' x='13634' y='78145'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='162' h='20283' id='10' is-fixed='true' name='MinorInjuryCount' show-title='false' w='14537' x='1851' y='78695'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{48CB007F-9A22-4702-9D15-9D4C7C6943E1}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='DeathLocations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:CrashId:ok]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:CrashSeverity:nk]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:InjurySeverity:nk]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:Calculation_2174112759618998279:ok]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
      </viewpoint>
      <simple-id uuid='{909B3162-DD3E-4B2C-B9F4-7A8C7C28D436}' />
    </window>
    <window class='worksheet' name='InjurySpread'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[cnt:CrashId:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:InjurySeverity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:CrashId:ok]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:CrashSeverity:nk]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:DriverBAC:nk]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:InjurySeverity:nk]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55A227D5-4063-4769-8B58-9CB058E170F9}' />
    </window>
    <window class='worksheet' name='Accident Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9DB826D9-E853-4BE1-8627-FEC45DB72C93}' />
    </window>
    <window class='worksheet' name='AccidentGraph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C5FB2E6-52FA-464F-8AFD-5FDB4CC35777}' />
    </window>
    <window class='worksheet' name='FatailityCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Latest Year (copy)_2174112759583948801]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{084626C8-6A51-44A0-802C-F570A451B958}' />
    </window>
    <window class='worksheet' name='FatalityGraph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90C45358-0CD0-4144-8869-2F27431F8E89}' />
    </window>
    <window class='worksheet' name='Serious Injury Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:LatestYearFatality (copy)_2174112759624765451:qk]</field>
                  <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:PreviousYearFatality  (copy)_2174112759624790028:qk]</field>
                  <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[usr:YoY Fataility (copy)_2174112759625039885:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>774</value>
                <value>770</value>
                <value>0.0051948051948051948</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{FCF334E0-7E97-4B5D-B0EC-116D31D1E6D0}' />
    </window>
    <window class='worksheet' name='SeriousInjuryGraph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4CF5A432-89B9-4F91-AE58-9697F9DC865A}' />
    </window>
    <window class='worksheet' name='MinorInjuryCount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C76CF29-770C-4A81-AC96-7378F558C254}' />
    </window>
    <window class='worksheet' name='MinorInjuryGraph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:CrashDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E00A5EAB-D14C-4011-B217-3493A4C712BA}' />
    </window>
    <window class='worksheet' name='weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:WeatherCondition:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32FE10AE-C96F-40DD-95CD-6E64EEA9163C}' />
    </window>
    <window class='worksheet' name='time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[hr:ModTime:ok]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[yr:ModTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBC2AA80-7FCF-4F97-BDEC-551B5D240308}' />
    </window>
    <window class='worksheet' name='Drunk driver'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[Driver BAC Set]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[io:Driver BAC Set:nk]</field>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:DriverBAC:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC2D74E9-1F00-46F6-82A3-AF6E4A558E5F}' />
    </window>
    <window class='worksheet' name='title'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A36891DD-7B71-4040-8603-F7E79CCC732E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Accident Count' />
        <viewpoint name='AccidentGraph'>
          <zoom type='entire-view' />
          <highlight field='[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='DeathLocations'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='FatailityCount' />
        <viewpoint name='FatalityGraph'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MinorInjuryCount' />
        <viewpoint name='MinorInjuryGraph'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Serious Injury Count' />
        <viewpoint name='SeriousInjuryGraph'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='title'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='50' />
      <device-preview visible='true'>
        <device name='Generic Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{09DAF4F3-24DF-4EAF-AF2D-389350ED6D38}' />
    </window>
    <window class='worksheet' name='CarType'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwn52o1mym3yi18o3jyz01wb6sx].[none:VehicleMake:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0D5784D-805B-4E77-93D7-7D26C6C0F7A9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='125' name='Accident Count' width='192'>
      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
      c93FNwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='AccidentGraph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CarType' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DeathLocations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Drunk driver' width='142'>
      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
    </thumbnail>
    <thumbnail height='125' name='FatailityCount' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FatalityGraph' width='192'>
      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
      yoNIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='InjurySpread' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='166' name='MinorInjuryCount' width='184'>
      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
      kUjvllINjioAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MinorInjuryGraph' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAZ7UlEQVR4nO3daY9c15nY8f+5ta/dXb2z95VsiqIWa7Eka5nxjODEHgmDieF4gAQTJC8M
      DCbJJ8hHCBAnMw4wgOdFEmCSSWaRYxjxMpZkWbtli6S6et/32vf9nrwoUiKlbprVXVXd1f38
      AEFkd1fVIXmee59zznPPUaZpaoS4oKwApWLhtNshxKkwTrsBQpwmCQBxoUkAiAtNAkBcaBIA
      4kKTABAXmgSAuNCstb6gmE3wq+A6T14bZ35pk0BPL+STxFJpegcm6GxzNaKdQjRETQGgtWZl
      Yxef28rq0goWu5tSqUQ6nWXm8hWCSysE/FNoDSALzOLsqykAiukw8VSeVCLCYF8PgyNjbCzM
      owzQuoxSVpRSKAWgGtNiIepImaapay2FCIVCdHW2s7S0gqe9C59ds7UXYWxyCqdVhhWidRwr
      AIQ4L+RyLS40CQBxoUkAiAtNAkBcaBIA4kKTABAXWs0BoLXGNM3Pfq01WmsqFVPWfkXLqbkW
      KBnZ5cPgJl/9ylOsLMySNm14jBIlE7wdfQz1dTainUI0RG21QGaZnXCavi4fuWQEwx3Ank1R
      NBUzl6cJLqygewNSCyTqSNPIspraaoGySUoVk/3dXRw2O2alzO5BlL6An1Qiht3llVogUR/a
      RMVXwSyjA9Pc7lR1d6xSiGw2i9vtRmtNLp/HaTPY3o8yONAv3V6cXDmPii2hKgXQGrNtBNzd
      DfkoqQUSZ4fWUIhjxFe5N4VWmN3XwGKv+0fKNKg4G7RGpbYxYst8YfyoTVRijduDy7qSABCn
      zyyjoguozN7hub5SqEIScpG6f3TN06BC1I3WUMqg4ssos3z/ga5SGMlNTIe/rqmQ3AHE6dAa
      ciGM6Hy18z/QayqoxHpdUyEJANF82kQlVjES67W9TilUIVHXVEhSINFcd6Y4ywVQx7j+KoVK
      baIdbWCxnbg5x6gFMtk/CKHNCpvrqyTSOcrFHKvrW5gNGKWLc0JryMdR4WB1fv8EC0bKrNRt
      VqjGANDsbq6yvLFDLpOms3eA1eVF5ueX6Am4WVzdPnGDxDmkNSq9gxFbQmGe/P3upEL56Inf
      qqYUqFLMEsuC12Hg9HiZn/2EvoFhoqEd3B4/le0wWmupBRKfMSsY8WUoptBK1XcuP7GOafOB
      cfxMvqZXmqbC7bCwth9lJXiTlGnHUyjgshrMBoN0dA9JLZCo0hrK2Wq+b5bBqP98i9ImKrWB
      bp84dq2QlEKI+tMacmGM5EZTPstsHwdX4Fgvl2lQUV+3yxZqnuI8LqWqgVYpHevlEgCifsqF
      6ixPPtKw8uVDmWVU8ngLZBIA4uS0hnwCFZlFVfI0ffynFCofh3ys5pfKQpg4mdtTnCq929yr
      /ucphUpuoB0+MA5fINNaUzZNMsUim4kYG/GoBIA4AbOMiq9UKzVPs/PfpswyJDYo+UfJlIps
      JeKsx6NsxGNsJeLsp1OYWuO12xlq72C4PSCzQOKYSnemOI83+DyJO7uRlCoVYvks0WyWaC5L
      PJclmc9zo+AibfEw1NbOSHuA4fYOBv3t9Pn82CyWe95LAkDURmvIRTCSjZ/l0VpTrJSJ5XJE
      c1mi2QzxXI5EIYdpamwWCx0uNwG3m4DLQ7vLRZvTicViR3dfe6AFspoDwCwXCC5tcmV8gIXl
      NQLd/ThVge2DGKPjk7gdklWdW9pEJTdQ2dDxCtlqkC+V+PnKIuFsmm6Pl4DLQ8DtpsPpxu90
      fuFKfm87NdoVQLeN/dbUrKYA0FqzsjhPsmjit8LA1Awr83NoNDPTE8wvb3FleryWP6doEapS
      RMWWoJxr+GctRkK8vb7KM8OjTHf1HPt9dMcE2tF+35+p+Yikjf045UIG1d3DncNgquUPBvp2
      oVO1FEhqgc4LVUhCYhV0paGfkykW+enSPDaLhW89/BhO2wnLnePr6C4vGEffLY41Bljf2KC/
      08/82g5t7Z04VIFIPMWl4UnavY6TNVqcHVqj0ruo9E5DZ3lMrZnd3+XD7U1eHJtkLFCn3QUf
      IBWSQbA4nNaoxCoqF21Y59dakyzk+cniHO1OFy+MTWK31nkMqTVmxyQ4D0+FZMQqDpePoXKR
      hg12Ta359c4mn+zv8dWJaQba7p+rH5tSqMQ62u49dFZI7gDii8wyKnQTpevw8MrnaK2JZLP8
      ZCnIgL+dZ0fGsN4nR6/Th6Jdnei20S/czeQOIL5AJTdRZqXuqU/FNHlvc43VWITfn7xCj9dX
      1/c/klKoXATtDICz7d5vyR3g7MmWivzVr95jKxHjj649yqP9g1gb8EDJoQpJjOh8XVMfrTV7
      6RQ/W5pnqqubJwaGsTTrz3N3Owwruuuhe1IhCYAzxNSaX66v8P0P3+HVmetMd/fw2uxNFsIH
      vDg+ydcvP0Sn24Nq1IyMNlGhW3UtbyhVKry1vsJBKsXLU1focLvr9t410xrt6kK3jXx6d5MA
      OCN2kgm++/YbeOx2/vSZFwi4Puso2WKRny0v8MP5T+hwunj16nW+NDB0/9XQY1CJDVT2oC6p
      j9aazUScny8v8Ej/AI/0DzQucGtrGGZgChzVVEgC4JQVy2X++uZHvLm6zJ9++XkevU9H0Vqz
      HA3z97M3+GR/j6+MjvONK9fo8XhP3rmKaYzIXF06f6Fc5vWVRdLFAi9PXcHncJ74PetJG7bb
      qZCl1lKIEssLq6RzRUYGu9iNJLHaHHgsFeLpLD0DY3S3exrc/PNBa82vd7b4i/d+wYtjU3zr
      +uPYa7ii50olXl9Z5P/O3cJtt/PqzHWeHho53l1Ba1T4k+p+PSdwJ0DfWlvhqaERZrp7z8ZV
      //O0Rru70P6R2u8Aod0t1nbCjF7qZDeWxjBsGLpYPSJpcYWZ6SnZFuW3iOay/MV7b5EpFPh3
      z75In89/ovdbjUX5h9kb3Njb4ZnhMb5x5SH6fP4Hfi5LpXcxTrjamy0V+cflBbSGr05M47bX
      fy//utIaMzBd4x3ANDG1ZmX2BmnlYGpykuWFeaxWg8uTYyyt73NlaqzBLW9dZdPkB8GbvBa8
      xb9+4ss8NzJe1ytkoVzmzbUlXgvewmYYvDLzMM8Oj91/dbWcxwh9cuynGLXWBA/2eX9rnedH
      x5nobMxJLo2gDVttAWCW8iyvbWLYnAz2drC+uYuvoxO/A7b2IoyOT+CwymPGn6e1Zj58wHff
      foOHe/v5ky89jcvW2CvkRjzGa8GbfLi1wZODw7x69ToD/rZ7A05rVGQOVcoc6+qfzOf5ydIc
      XruDl8ancNS7jKHRtJZBcKOlCnn+8oO3WY/H+PfPvlS/Qq8HVKyU+eX6Cv8wexMN/MGVazw/
      Oo7dakVlDjCSmzV3flNrPt7d5sbeNr87Ps1Qe0djGt8EEgANYpomP1te4H98/CH//PrjvDw1
      g3HKA8LtZIIfBG/y7sYazw4O8M1eKwGXq6Y0LJrN8OPFOfp8fp4bGa/7VGyzSQDUmdaajXiM
      //T26/T5/Hznqa/gd56tacBSpcLCwlssbC9Rqpg83NfPdFcPVsM4MhgqpskHWxssRUL83uRl
      er2+sznDUyMJgDrKlUr8t1+/z0c7W/zZMy9wtbcPdRb3SM1FqicxKlV9iHxvm+VImIG2dh7p
      H6DrrtVmreEgk+Kni3OMB7p4amjkVMoYGkUCoA5MrXlvc42//OBt/sn0Vf7woeuNr3A8rkoJ
      Fb71hUpP0zRZi0f5zc42hUqZa739TAS6+HB7g+1kgpenrtDpPn9rPBIAJ7SXSvKf33kTq2Hw
      Z8+8QJfHe9pNui8VW0blY/cd+KYKBW7t7RAM7fNI/wCPXRo89fFLo0gAHFOxUuH/3Po1P11a
      4DtPP8cTA8NnPyfOxzFiiw3f0aGV1LwrRKlYBMOC3WqhVCqCYcVqURSKJRwOx1nMeOtKa82N
      vR3+/N1f8MzwKH/8yBOtMf9tVqqpz4OeyHhB1PgvV2Zvd4+DgzATk4PshtP0dHUSO9hGWa3Y
      3J2MXOpqTEvPgFguy/fee4tYLst/+N2vMdiox/gaQKW2UJXSmdjC8CypKQCUsuF0GOQrJrvb
      e9hcHvYPwiitmBmfILiwgu7vPHe1QBXT5EcLQf5u9gb/4tEneXFsEqWqA8dWoIppVOag/kcU
      nQM1nhGWw+L00+ONYPe1oZxecqE9bAZEIiEcbv+5OiJJa81SJMR3336Dqa4e/ssr/wyPvcW2
      fdEmKrWOOkdTl/VU8xggEtrHcHjo8HuJRUI4fR04LZqDSJLe3q5z0O2r0sUC3//wXRbDB/zb
      515iqoWKvO6mUluo9J6kPkeQWSCqKU6qkGcxEmL2YI+FcIjNRIxvXnuMf3r5ausu/JSyGOFZ
      6fz3ceECoGyaJPN5FiMHzB7ssRgOsZ9O4bHbmersZqanj+muHi7525r3IHojaI2KBFFN2Muz
      lZ3rACibJol8joXwZ509lEnjdTiY6uzm6u3O3u/zt+5V/ggqvYdKbcnV/7c4NwFQrlSI53PM
      3+7sS5EQ4UwGn8PB5a4eZnr6mOrqoc/rO3ed/QvKBYzwrdNuRUtouQDQaMoVk1gue09nj2az
      tDmdXO7qZaanl6mubnq9/nO7hH8krVHRBVQxJVf/B3CmA+DOoWbRXIa5ULWzL0dCxHI52l0u
      rnT1MtPTx2RnFz1e38Xr7IfJhqpn9MrfxQM5kwGwFovww/lZliNhkvkcHW43V7p7memudvbu
      emwDch5ViqjQJyhaY4HuLKhxHcBkZ3MD7B4u9XVTzCZJFxU+p8HWboSRkSEsxsk75loswl4q
      xURn1z216eI+tEbFl6vn5crf1wOrMQAq5PNllueDTD/yCMuzs2irDV0qMD46xMZ+issTQw1u
      sjhUPoYRW5bOX6Maa4EspOO7ZIoVDjZWcLV3Eo+GsVstON1eKqUDtNbnrhbozNMVjPiaHE11
      DDXWAmWJJrM4bQYOXydkUuQLRdrdHmaDcwR6h85VLVCrUPF1lK7/duYXwZkcBIsaFJIY0QXp
      /Md0zleEzjltohJr0vlPQAKghanUNqpSPO1mtDQJgFZVzKAy+3L1PyEJgFYkqU/dSAC0IJXZ
      kzLnOpEAaDXlPCq9K1f/OpEAaCVaV1MfWeyqm5oWwrQus7ywQklZGB3oZnN7D7vbR5tDsRuO
      MTw2iddpa1RbRTaEKqbl6l9HNT8UX8jnmA8ucPn6NWyY3JpdxGpVzExPMLe8ycz0RIObfEFV
      ihjhT6ABp7dfZDVvaVbI57BaoJjPMbu0xtWrM6wsL6I+t92e3KXrSVdr/KXz111Nd4BKMcvS
      6hYVE/xuK8lCBa/Hj8soEYolGRyZxO8544ejtaK7tjMX9SW1QGedWao+5KIrp92Sc0lmgc44
      ldyUDW0bSALgLMsnULmopD4NJAFwVpkVVFIebm+0FtjY/gIqZVGJtWqlpwRAQ0kAnCXarO7o
      ltmt/l46f8NJAJwVxUz1ql/OScdvIgmA06ZNVGrndm0/0vmbrMZaoBLLC6uksnkmxvpY2w7j
      dvtwqALJTJ7u/lF6Amf7lMQzpZhCJdZR5bx0/FNS8xFJbX43kWSGrd0I165eZS4YpKg0V2eu
      EFxcobtjSrZF+W20iZHaRmUPQCnZzuQU1XYHqJRp7+6nMxKmgCJdKFX/8UxNqZjHsDhkW5T7
      0fr2Vf/2DM9536W6BdRUCmGWC6yub2Kxuxm+1M3q6hqdvQM4VJHN3Qhj42PYLPKPeiizjEpu
      oXJhSXfOEKkFajStoZBAJdflmNIzSGaBGsksVWt57pQzSOc/cyQAGkHr6ma1yQ0wy9LxzzAJ
      gHqrFFHJjc+2KZfOf6ZJANSL1pCLoFKbKFM2qm0VEgD1UClUF7QKSbnqt5izGQC5KKqQRNs9
      YPeCxQHqDE6val09kyu1VX1eVzp+y6kxADSFfJ6KVricDjLpNA63B6vSpLN5vF5PXZa/VDmH
      ykeqc+ZoMKxoqwtsHrTdCzYPGLbT7XDlfPWqf+c0Run8Lam2bVHMEhsbu8TDIfyBNnB4SMXi
      OCwVXC4XptXH6GDPyRuV2kZl9o5qRPV/Fns1EGwetN0HVicoS+M7otao7D4qtYOUe7S+w+8A
      WqPhC4fTKcNKm9dOPOOlw+tkaSeE3e6igmZoeITgwgpad5+4FkhpjXFkbcztNlVKUIlDLl49
      FVEZaIuzGhB37hQWR30DopzHSKxBKYOWK/65cGQK9PqPf0imYuXKQw8zPnwJQynMco7ZxS0e
      ujpNaG+LocEBdrZ3cNgM9vZ2cHnb6lILVH2PB3y9ArBUf2kWoFCAfATQoKxoWx1SJ22iMvuo
      9E7191LDc24cngJpzUfvvcmtuRXcbQG01cU3/+BltFkmHI6iMejsCpCIRfH42rFZNLFEhkCg
      vT5jgPulQMd1aOrkBavr/qlTKVPN9UtZyfPPoSMD4B9ff4PfeelFFJDL53G5XM1rVCMC4PO0
      pnqXMNAWx113CS9YHdV2pHcb3w5xqo5MgdaDv+Jv03nGxsd5/KHpZrapOZTiTpqmKoXqXH7u
      rtRJqep+PHLVP9eOTGZHJ6cx8yniiXQz23O6lLq93mDKsaMXxJEB8PiTz/E7Lz3P+spiM9sj
      RFMdmQL95sN3CKcKXJ55qJntEaKpvngH0Jrf3LwJSqFQ7K0v8vHc6ik0TYjGOzQFun7tGm1t
      7Xi8HobGpynnU81ulxBN8cUUSCkM4KObc7zy6qvY7U78Pg9QPSFmf2eLgrYxPNDD9uYGDm8H
      fqfB5m6E0dERrBYZOIrWceQguL/LzxtvvMHHc8t3fbWM29dJPrrPxsYaJYsLj8vB0so6g/0B
      ltY2m9BkIern0EHwb97/BeFEHoB8oXjPj8fCq9jau8kmQvi7PcwvLOKwW3A43ZilPbTWDa4F
      EqJ+Dg2AR596Hotnloev3TsDpEtpVjdDDAxYGRwaYGUrhN3hwmvXzAbn6OobaX4tkBAncGQp
      xF997z/iG7zK2PgEX7rW3JXgppRCCMH9FsKeeJJUdB+Hs3k1QEI025EB8M5HQb79rT/il2/+
      vJntEaKpjgyAp65P87d/9wO+/NyLzWyPEE11ZADs7O1js9uJx+PNbI8QTXVkLVAonub3fv9r
      ON2y3784vw6tBcoXCjx0eZLZ4Czr2zIbI86vQ1Og1bW1z34j8/HiHDu0Figd2WHrIIlhKArF
      z1aCtS6zsrhCoQJXrkwTP9ghUTbwW032owmGRibwue3NbL8QJ3LoGKCnt59ouoTFYqOvp+uu
      7xiMTkwwd+MGhXKR/Vh1U6hspczVy5MElzaYmZ44eas0cmSQaIpDU6C29g7sVkUmk2LvIHrP
      9+Y+uUn/xDS7S3MUKxV2D8KfZkmSLIlWc+gd4KMP3mU/VSHQ5sNus3z6dV3OkSspIgf7jF2+
      joUKu/shHIZJcGGZodHJutTwVHcalHASjXdkLdD//pv/xdde+UPcditGkzeCklog0SxH9uyn
      n3yc7c1NDiKxZrZHiKY6ciHs/bffYjeewtM1zr/61jea2SYhmubIO0DR6ubK+ChFeR5YnGOH
      B4CCF556DLu/i2efeKLJTRKieQ4PAA2v/einGBYL73/4TpObJETzHBoA5UqFpx+dYSEY5PGn
      nm92m4RomkMHwfM3PmAjWuDr33gFj/vuJ8I0uWyGsjbwul0kE3Gcbh82CyRSWdrb/bIYJlrK
      oXeA4bEJ8rEdfvT/fszHwaVPv149HyDB2vwc0UScXKFMcG6Ohfk5sukoq5v7TWu4EPVw6B1g
      bz/Es1/9OkP9PSRTn80CKcOKx6WIO70E2tpZX16go7ObTDLCpUuDt49I6pFtUUTLODQAlC7z
      X7/357z0lWdZ2Y3xnT/5NgBmKccnC5vMXJ5id22BlHYw5HNTSIbZ3trE7WuXbVFESzm0FCKd
      jPPGL99hemwEf88gvQE/ANqsEI9XD4N2u51kMjmsNjs+j4NkOoff7zu7RyQJcYhD7wBen5/9
      vX12N1bB1c6/+Zd/DIAyLHQEOj79OYfD+emv2/y+BjdViPo7ohRCMTHQiaPrccr5BztDWIhW
      dGQtUCKRJJvbxGqazWyPEE11ZABE40kq1gI2T9dRPyJEyzsyAB5/+ll6enoJxxLNbI8QTXXk
      9ujf/+u/58nHHsXW1se1mcvNbpcQTXHk9ujfLpRIF0wCfcPNbpMQTXPE8wCaj2cXsVgNbt28
      8dlXtcnO5jprmzuYlRIry0vEU1ly6QSLSyuUKjJgFq3liABQvPDCC7TZFZeGRu/6uom/o4dC
      LMTi8jKdl4bZ2lhjZX2TkYFullfliCTRWg4fBCvF1atXQV/hv//PvwGevP0NC+G9JeyBXgqp
      GD6nHeP26eo2hwuzUpAjkkRLOTQAbn30LsGVLQBc/s+mQXU5w8ZOjP5Ldi71dnJzdhaP24dD
      FZgNztF9aVRqgURLOXxblFMmtUCiWZq74Y8QZ4wEgLjQJADEhSYBIC40CQBxoUkAiAtNAkBc
      aEeWQx9Ga83W2gJWTz9tzjLru2HcHh8ea4WDaJKBkUnaPHJEkmgdNQUAQG9/N1s7eYx8Bofb
      QyqVJKMrzNw+Isl/+4ikkxQyGHJEkmiSmlIgpRQWazVm8uUyHpcTbZqgqh3+7uIFdYL/hGiW
      GlOgMmsr2ySzJsNDvYTCEXz+dtqcMLewzPCYHJEkWovUAokLTWaBxIUmASAuNAkAcaFJAIgL
      TQJAXGgSAOJCkwAQF1rNtUCrSzfBfolLAQsLG3t09/RSSIbI5IsEeofp72prVFuFqLuaAkAp
      xcjYKOsbedbWt3E6PaTTGUrFCldnZggurNDX6ZdtUUTLqLkY7o42rxtrYIC99WUMAwq5DBa7
      S7ZFES2l5lqg9dU9iiZcGp8gtLPB4MgYHptmczfC5KjsIypai9QCiQtNZoHEhSYBIC60/w8J
      niSq3jpuRAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='166' name='Serious Injury Count' width='192'>
      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
      AWKDaz6SLg99AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='SeriousInjuryGraph' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAYUklEQVR4nO3daXAc553f8e/T3XMBGNz3QZwkQfEQSYmmKInySrK2dFNrS2uvy0nFSSrr
      OFXZlGsrqcqLvEul8iKpzZtkkxd2XNk4q3O1m8hrWbYsiaREUzzEG/d9AwNgMMDc3U9egIQO
      DkQCxABD9v9T1VXksGf630T/MN1PP08/ynEcjRAuZQHEIgtZ24DWGqVU1j5fiDthZHsD0Vgs
      25sQYt2yHgAhcpkEQLiaBEC4mgXLF6rZlO3PF2K9rBt/iMXiWdlAIpFEIa1AIjdZAEop8vIC
      WdmARmfts4W4U3INIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBc
      zbr1Kl+gHQb7e8FfRGNtJZMj/cylvRRZaeYiS1TVbiM0MUwyDe272rEM6QQnctvaAqAM6hu2
      MTw+TToZJRyzQSWZTyTZtaONqx3dWIECGooVk+E4dSV5gEI6Q4tctbYAfMHYyDBpWzM1O0dl
      aRA7ncL0eHFsh0TSwZtvAhrQ0hla5Kw1BUBrh+HhYZYSaVpa22iwoCq8hN906B2aoLmllfnp
      MZbSBk0F3mzVLMSGUY7j6Gw+FmUpGiU/Ly9rny/EnZBWIOFqEgDhahIA4WoSAOFqEgDhahIA
      4WoSAOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFqawuA1sSjERYWY6STcfr7+5mPREnFo/QP
      DmM7mvDsDGNTIRkEI+4Kax4QMzcfJpaG+qpy6uvrudrZhcdQNG2road/kFQqRbHXYT5YRElg
      3eNthNgUaxwSqaisqGB4fBqP10t/TxemJ4AiRSCQTyo2hjc/SGG+YiGWpCTgQYZEily25hFh
      Q4MDjIcWCPg82MoD2ibfZ3Kts4fymjpC48P0R6B9dz0yJFLkOhkRJlxNWoGEq0kAhKtJAISr
      SQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKutcZI8zfjYEPgK
      KQmYDI9P4fHnU+RXTITCNGxrZnZyhFhasb21GZkjT+S6NY9ZLCkpY2JmHk9JDc2NDVzt6iO6
      qGhva6Kjuw/D66cyTzMVSVBd6AOQEWEiZ63tFEgpPB4PAE4yyuWOXnbs2IFSCoUC9PKflQJ9
      47CXrwGRu9YxSd4gc4sJTDuJ1+9jenqGypJCOnoGaGhqYXZihMlFxY5q/413SQREzpIhkcLV
      pBVIuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuNqa
      A+DYaZKpNACJeBzn+mvz4QW0hmQ8xmI0ttF1CpEVa5wl0mFkaIChsQlS8SUunb9EAujp7mIp
      MsfAyDgdPX2MDvSymHSyU7EQG2iNI8IM6uobsBR4/PnUVpYBYCuTutpaluZD+POD1FYUMReJ
      sTwaTF2fKUwWWXJvWeOIMM383CzzC2FisVLmFxZQ8wtYaIZHRgmWlrMwF2I0pmloq1vZjIwI
      E7lqTSPCtNZEFsLYGgJ+P7F4HMO0COYHWFyKESwoIJ2Mk3IUeYHlAfEyIkzkMhkSKVxNmkGF
      q0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq615krzR
      4QHwF1IZ9NI9MEphSRl+lWJ6boHahibmJoeJpRU7trdhykAAkePW1h1aa5KJGGNTs+j4EtWt
      Oxjo7kKj2dXWzLWuPkxfHpV5mnheNTVFfpaiMfLyAtndCyHWac2T5JmmufxGpXCuT4SnUGg0
      yjAAjdYaQ9349a83sFwhNtY6JskbIhxN0tq0jeGebkrKK/GrFJ29Q2xrbmFucoSZmGJ7jW/l
      fXImJHKVjAgTriatQMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC1SQAwtUkAMLVJADC
      1SQAwtUkAMLV1h0ArR0mJydIph2cdIqJqRm0hthShNnw4kbWKETWrG1I5BcM9fdRUFpBR2cX
      XsOhoryUvqERoosR8iyNx7+ToM/cyFqF2HDrDkBBfh7T0zPE4nE8BQHKysoYn+jEV1BIZYFi
      fjFO0FfAjUnyhMhF6x4Qk4guMjETImkbGOklNAa+YAnz0xOApq19DwGPIQNiRE5bdwC0dkim
      0ng9HkCTStl4PB4cJ42jFR5r+fRHAiBy2bpPgZQy8Hm9N/6G17t8PW2aFnLmL+4W0gwqXE0C
      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
    </thumbnail>
    <thumbnail height='70' name='title' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='weather' width='164'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
